{"version":3,"sources":["components/input.jsx"],"names":[],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;;;;;;;AAEO,IAAM,8CAAmB,CAC9B,OAD8B,EACrB,UADqB,EACT,QADS,EACC,OADD,CAAzB;;AAIP,SAAS,QAAT,CAAkB,CAAlB,EAAqB;AACnB,UAAQ,KAAK,KAAL,CAAW,IAAnB;AACE,SAAK,OAAL;AACA,SAAK,UAAL;AACE,WAAK,QAAL,CAAc,EAAE,SAAS,EAAE,MAAF,CAAS,OAApB,EAAd;AACA;AACF;AACE,WAAK,QAAL,CAAc,EAAE,OAAO,EAAE,MAAF,CAAS,KAAlB,EAAd;AACA;AAPJ;AASD;;IAEoB,K;;;AAEnB,iBAAY,KAAZ,EAAmB;AAAA;;AAAA,yFACX,KADW;;AAEjB,UAAK,KAAL,GAAa;AACX,eAAS,MAAM,OADJ;AAEX,aAAO,MAAM,KAFF;AAGX,gBAAU,MAAM,QAHL;AAIX,UAAI,MAAM,EAAN,IAAY;AAJL,KAAb;AAMA,UAAK,QAAL,GAAgB,MAAM,QAAN,IAAkB,SAAS,IAAT,OAAlC;AARiB;AASlB;;;;mCAEc,E,EAAI,K,EAAO;AACxB,YAAM,EAAN,GAAW,EAAX;AACA,YAAM,KAAN,GAAc,MAAM,KAAN,IAAe,KAAK,KAAL,CAAW,KAAxC;AACA,UAAI,CAAC,MAAM,QAAX,EAAqB;AACnB,cAAM,QAAN,GAAiB,KAAK,QAAtB;AACD;AACD,aACE,0CAAc,KAAd,CADF;AAGD;;;iCAEY,E,EAAI,K,EAAO;AACtB,YAAM,EAAN,GAAW,EAAX;AACA,aACE;AAAA;QAAY,KAAZ;QACG,KAAK,KAAL,CAAW;AADd,OADF;AAKD;;;kCAEa,E,EAAI,K,EAAO;AACvB,YAAM,EAAN,GAAW,EAAX;AACA,YAAM,KAAN,GAAc,KAAK,KAAL,CAAW,KAAzB;AACA,aAAO,MAAM,OAAb;AACA,aACE,uCAAW,KAAX,CADF;AAGD;;;gCAEW,E,EAAI,K,EAAO;AACrB,YAAM,EAAN,GAAW,EAAX;AACA,YAAM,OAAN,GAAgB,KAAK,KAAL,CAAW,OAA3B;AACA,YAAM,QAAN,GAAiB,KAAK,QAAtB;AACA,aACE;AAAA;QAAA,EAAK,WAAU,OAAf;QACE,uCAAW,KAAX,CADF;QAEE;AAAA;UAAA,EAAO,SAAS,EAAhB;UAAqB,KAAK,KAAL,CAAW;AAAhC;AAFF,OADF;AAMD;;;mCAEc,E,EAAI,K,EAAO;AACxB,YAAM,EAAN,GAAW,EAAX;AACA,YAAM,OAAN,GAAgB,KAAK,KAAL,CAAW,OAA3B;AACA,YAAM,QAAN,GAAiB,KAAK,QAAtB;AACA,aACE;AAAA;QAAA,EAAK,WAAU,UAAf;QACE,uCAAW,KAAX,CADF;QAEE;AAAA;UAAA,EAAO,SAAS,EAAhB;UAAqB,KAAK,KAAL,CAAW;AAAhC;AAFF,OADF;AAMD;;;8BAES,E,EAAI,K,EAAO;AACnB,aAAO;AAAA;QAAA,EAAK,WAAU,SAAf;QAA0B,KAAK,KAAL,CAAW;AAArC,OAAP;AACD;;;6BAEQ;AACP,UAAI,KAAK,KAAK,KAAL,CAAW,EAApB;AACA,UAAI,QAAQ,yBAAa,KAAK,KAAlB,CAAZ;AACA,aAAO,MAAM,QAAb;AACA,aAAO,MAAM,KAAb;AACA,cAAQ,MAAM,IAAN,IAAc,MAAtB;AACE,aAAK,UAAL;AACE,iBAAO,KAAK,cAAL,CAAoB,EAApB,EAAwB,KAAxB,CAAP;AACF,aAAK,QAAL;AACE,iBAAO,KAAK,YAAL,CAAkB,EAAlB,EAAsB,KAAtB,CAAP;AACF,aAAK,OAAL;AACE,iBAAO,KAAK,WAAL,CAAiB,EAAjB,EAAqB,KAArB,CAAP;AACF,aAAK,UAAL;AACE,iBAAO,KAAK,cAAL,CAAoB,EAApB,EAAwB,KAAxB,CAAP;AACF,aAAK,KAAL;AACE,iBAAO,KAAK,SAAL,CAAe,EAAf,EAAmB,KAAnB,CAAP;AACF;AACE,iBAAO,KAAK,aAAL,CAAmB,EAAnB,EAAuB,KAAvB,CAAP;AAZJ;AAcD;;;;EAzFgC,gBAAM,S;;kBAApB,K;;IA6FR,U,WAAA,U;;;AAEX,sBAAY,KAAZ,EAAmB;AAAA;;AAAA,+FACX,KADW;;AAEjB,WAAK,KAAL,GAAa;AACX,eAAU,MAAM,OADL;AAEX,aAAU,MAAM,KAFL;AAGX,gBAAU,MAAM;AAHL,KAAb;AAKA,WAAK,QAAL,GAAgB,SAAS,IAAT,QAAhB;AAPiB;AAQlB;;;;8CAEyB,K,EAAO;AAC/B,UAAI,KAAK,OAAO,MAAM,EAAb,IAAmB,WAAnB,GAAiC,MAAM,EAAvC,GAA4C,KAAK,KAAL,CAAW,EAAhE;AACA,UAAI,UAAU,MAAM,OAAN,IAAiB,KAAK,KAAL,CAAW,OAA1C;AACA,UAAI,QAAQ,MAAM,KAAN,IAAe,KAAK,KAAL,CAAW,KAAtC;AACA,WAAK,QAAL,CAAc,EAAE,MAAF,EAAM,gBAAN,EAAe,YAAf,EAAd;AACD;;;8BAES,E,EAAI,K,EAAO;AACnB,YAAM,EAAN,GAAW,EAAX;AACA,YAAM,QAAN,GAAiB,KAAK,QAAtB;AACA,YAAM,OAAN,GAAgB,KAAK,KAAL,CAAW,OAA3B;AACA,YAAM,KAAN,GAAc,KAAK,KAAL,CAAW,KAAzB;AACA,cAAQ,MAAM,IAAd;AACE,aAAK,UAAL;AACA,aAAK,OAAL;AACE,iBAAO,8BAAC,KAAD,EAAW,KAAX,CAAP;AACF;;AAEE,iBAAO;AAAA;YAAA,EAAK,WAAU,SAAf;YAAyB,8BAAC,KAAD,EAAW,KAAX;AAAzB,WAAP;AANJ;AAQD;;;kCAEa;AACZ,aAAO,iBAAiB,OAAjB,CAAyB,KAAK,KAAL,CAAW,IAApC,MAA8C,CAAC,CAAtD;AACD;;;uCAEkB,E,EAAI,K,EAAO;AAC5B,aACE;AAAA;QAAA,EAAK,WAAU,OAAf;QACE,uCAAK,WAAU,SAAf,GADF;QAEI,KAAK,SAAL,CAAe,EAAf,EAAmB,KAAnB;AAFJ,OADF;AAMD;;;oCAEe,E,EAAI,K,EAAO;AACzB,aAAO,MAAM,KAAb;AACA,aACE;AAAA;QAAA,EAAK,WAAU,OAAf;QACE;AAAA;UAAA,EAAO,SAAS,EAAhB;UAAqB,KAAK,KAAL,CAAW;AAAhC,SADF;QAEI,KAAK,SAAL,CAAe,EAAf,EAAmB,KAAnB;AAFJ,OADF;AAMD;;;6BAEQ;AACP,UAAI,KAAK,KAAK,KAAL,CAAW,EAAX,IAAiB,sBAA1B;AACA,UAAI,QAAQ,yBAAa,KAAK,KAAlB,CAAZ;AACA,aAAO,KAAK,WAAL,KAAsB,KAAK,kBAAL,CAAwB,EAAxB,EAA4B,KAA5B,CAAtB,GAA2D,KAAK,eAAL,CAAqB,EAArB,EAAyB,KAAzB,CAAlE;AACD;;;;EA7D6B,gBAAM,S;;AAiEtC,MAAM,KAAN,GAAc,UAAd","file":"components/input.js","sourcesContent":["import React                      from 'react';\r\nimport { uniqueId, shallowClone } from '../utils';\r\n\r\nexport const TYPES_WITH_LABEL = [\r\n  'radio', 'checkbox', 'submit', 'reset'\r\n];\r\n\r\nfunction onChange(e) {\r\n  switch (this.props.type) {\r\n    case 'radio':\r\n    case 'checkbox':\r\n      this.setState({ checked: e.target.checked });\r\n      break;\r\n    default:\r\n      this.setState({ value: e.target.value });\r\n      break;\r\n  }\r\n}\r\n\r\nexport default class Input extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: props.checked,\r\n      value: props.value,\r\n      disabled: props.disabled,\r\n      id: props.id || uniqueId()\r\n    }; \r\n    this.onChange = props.onChange || onChange.bind(this);\r\n  }\r\n  \r\n  renderTextarea(id, props) {\r\n    props.id = id;\r\n    props.value = props.value || this.state.value;\r\n    if (!props.onChange) {\r\n      props.onChange = this.onChange;\r\n    }    \r\n    return (\r\n      <textarea {...props} />\r\n    );\r\n  }  \r\n  \r\n  renderSelect(id, props) {\r\n    props.id = id; \r\n    return (\r\n      <select {...props}>\r\n        {this.props.children}\r\n      </select>\r\n    );\r\n  }\r\n  \r\n  renderDefault(id, props) {\r\n    props.id = id;\r\n    props.value = this.state.value;\r\n    delete props.checked;\r\n    return (\r\n      <input {...props} />\r\n    );\r\n  }\r\n\r\n  renderRadio(id, props) {\r\n    props.id = id;\r\n    props.checked = this.state.checked;\r\n    props.onChange = this.onChange;  \r\n    return (\r\n      <div className=\"radio\">\r\n        <input {...props} />\r\n        <label htmlFor={id}>{this.props.label}</label>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  renderCheckbox(id, props) {\r\n    props.id = id;\r\n    props.checked = this.state.checked;\r\n    props.onChange = this.onChange;    \r\n    return (\r\n      <div className=\"checkbox\">\r\n        <input {...props} />\r\n        <label htmlFor={id}>{this.props.label}</label>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  renderSet(id, props) {\r\n    return <div className=\"control\">{this.props.children}</div>;\r\n  }\r\n  \r\n  render() {\r\n    let id = this.state.id;\r\n    let props = shallowClone(this.props);\r\n    delete props.children;\r\n    delete props.label;\r\n    switch (props.type || 'text') {\r\n      case 'textarea':\r\n        return this.renderTextarea(id, props);\r\n      case 'select':\r\n        return this.renderSelect(id, props);\r\n      case 'radio':\r\n        return this.renderRadio(id, props); \r\n      case 'checkbox':\r\n        return this.renderCheckbox(id, props);\r\n      case 'set':\r\n        return this.renderSet(id, props);\r\n      default:\r\n        return this.renderDefault(id, props);\r\n    }\r\n  }\r\n  \r\n}\r\n\r\nexport class InputGroup extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked:  props.checked,\r\n      value:    props.value,\r\n      disabled: props.disabled\r\n    };    \r\n    this.onChange = onChange.bind(this);\r\n  }\r\n  \r\n  componentWillReceiveProps(props) {\r\n    let id = typeof props.id != 'undefined' ? props.id : this.state.id;\r\n    let checked = props.checked || this.state.checked;\r\n    let value = props.value || this.state.value;\r\n    this.setState({ id, checked, value });\r\n  }  \r\n  \r\n  makeInput(id, props) {\r\n    props.id = id;\r\n    props.onChange = this.onChange;\r\n    props.checked = this.state.checked;\r\n    props.value = this.state.value;        \r\n    switch (props.type) {\r\n      case 'checkbox':\r\n      case 'radio':     \r\n        return <Input {...props}  />;\r\n      default:\r\n\r\n        return <div className=\"control\"><Input {...props} /></div>;\r\n    }\r\n  }\r\n  \r\n  hasOwnLabel() {\r\n    return TYPES_WITH_LABEL.indexOf(this.props.type) !== -1;\r\n  }\r\n  \r\n  renderWithoutLabel(id, props) {\r\n    return (\r\n      <div className=\"group\">\r\n        <div className=\"control\"></div>\r\n        { this.makeInput(id, props) }\r\n      </div>\r\n    );    \r\n  }\r\n  \r\n  renderWithLabel(id, props) {\r\n    delete props.label;\r\n    return (\r\n      <div className=\"group\">\r\n        <label htmlFor={id}>{this.props.label}</label>\r\n        { this.makeInput(id, props) }\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  render() {\r\n    let id = this.props.id || uniqueId();\r\n    let props = shallowClone(this.props);\r\n    return this.hasOwnLabel() ?  this.renderWithoutLabel(id, props) : this.renderWithLabel(id, props);\r\n  }\r\n  \r\n}\r\n\r\nInput.Group = InputGroup;"],"sourceRoot":"/source/"}